// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package iso

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatPortForwardConfig is an auto-generated flat version of PortForwardConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatPortForwardConfig struct {
	DisableForwarding *bool `mapstructure:"disable_forwarding" required:"false" cty:"disable_forwarding" hcl:"disable_forwarding"`
	ForwardingPort    *int  `mapstructure:"forwarding_port" required:"false" cty:"forwarding_port" hcl:"forwarding_port"`
}

// FlatMapstructure returns a new FlatPortForwardConfig.
// FlatPortForwardConfig is an auto-generated flat version of PortForwardConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*PortForwardConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatPortForwardConfig)
}

// HCL2Spec returns the hcl spec of a PortForwardConfig.
// This spec is used by HCL to read the fields of PortForwardConfig.
// The decoded values from this spec will then be applied to a FlatPortForwardConfig.
func (*FlatPortForwardConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"disable_forwarding": &hcldec.AttrSpec{Name: "disable_forwarding", Type: cty.Bool, Required: false},
		"forwarding_port":    &hcldec.AttrSpec{Name: "forwarding_port", Type: cty.Number, Required: false},
	}
	return s
}
